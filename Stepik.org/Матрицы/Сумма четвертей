#Суммы четвертей
#Квадратная матрица разбивается на четыре четверти, ограниченные главной и побочной диагоналями: верхнюю, нижнюю, левую и правую.
#Напишите программу, которая вычисляет сумму элементов: верхней четверти; правой четверти; нижней четверти; левой четверти.
#Формат входных данных
#На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы (целые числа) построчно через пробел.
#Формат выходных данных
#Программа должна вывести текст в соответствии с условием задачи.
#Примечание. Элементы диагоналей не учитываются.

#Тестовые данные
#Sample Input 1:

#4
#1 2 3 4
#5 6 7 8
#3 4 5 6
#1 2 3 4
#Sample Output 1:

#Верхняя четверть: 5
#Правая четверть: 14
#Нижняя четверть: 5
#Левая четверть: 8
#Sample Input 2:

#5
#1 4 3 4 7
#5 6 7 8 4
#3 8 5 6 1
#1 2 9 4 8
#5 6 1 5 8
#Sample Output 2:

#Верхняя четверть: 18
#Правая четверть: 19
#Нижняя четверть: 21
#Левая четверть: 17
#Sample Input 3:

#2
#99 72
#65 11
#Sample Output 3:

#Верхняя четверть: 0
#Правая четверть: 0
#Нижняя четверть: 0
#Левая четверть: 0

#Решение
n = int(input())
matrix = []
v = 0
p = 0
ni = 0
l= 0
for i in range(n):
    temp = [int(num) for num in input().split()]
    matrix.append(temp)
for i in range(n):
    for j in range(n):
        if i < j and i < n - 1 -j:
            v += int(matrix[i][j])
        if i < j and i > n - 1 -j:
            p += int(matrix[i][j])
        if i > j and i > n - 1 -j:
            ni += int(matrix[i][j])
        if i > j and i < n - 1 -j:
            l += int(matrix[i][j])
print('Верхняя четверть:', v)
print('Правая четверть:', p)
print('Нижняя четверть:', ni)
print('Левая четверть:', l)
