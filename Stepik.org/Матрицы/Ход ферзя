#На шахматной доске 8×8 стоит ферзь. Отметьте положение ферзя на доске и все клетки, которые бьет ферзь. 
#Клетку, где стоит ферзь, отметьте буквой Q, клетки, которые бьет ферзь, отметьте символами *, остальные клетки заполните точками.

#Формат входных данных
#На вход программе подаются координаты ферзя на шахматной доске в шахматной нотации
#(то есть в виде e4, где сначала записывается номер столбца (буква от a до h, слева направо), затем номер строки (цифра от 1 до 8, снизу вверх)).

#Формат выходных данных
#Программа должна вывести на экран изображение доски, разделяя элементы пробелами.

#Тестовые данные
#Sample Input 1:

#c4
#Sample Output 1:

#. . * . . . * .
#. . * . . * . .
#* . * . * . . .
#. * * * . . . .
#* * Q * * * * *
#. * * * . . . .
#* . * . * . . .
#. . * . . * . .
#Sample Input 2:

#a1
#Sample Output 2:

#* . . . . . . *
#* . . . . . * .
#* . . . . * . .
#* . . . * . . .
#* . . * . . . .
#* . * . . . . .
#* * . . . . . .
#Q * * * * * * *
#Sample Input 3:

#h5
#Sample Output 3:

#. . . . * . . *
#. . . . . * . *
#. . . . . . * *
#* * * * * * * Q
#. . . . . . * *
#. . . . . * . *
#. . . . * . . *
#. . . * . . . *

#Решение
def input_matrix(): #функция заполнения матрицы
    matrix = []
    for i in range(8):
        temp = ['.' for i in range(8)]
        matrix.append(temp)
    return matrix
def print_matrix(matrix, n, width=1): #функция вывода матрицы
    for r in range(n):
        for c in range(n):
            print(str(matrix[r][c]).ljust(width), end=' ')
        print()
n = input()
mx = input_matrix()
list1 = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
poz = [list1.index(n[0]), int(n[1]) - 1]

for i in range(8):
    for j in range(8):
        if i == poz[0] or j == poz[1] or abs(poz[0] - i) == abs(poz[1] - j):
            mx[j][i] = '*'
mx[poz[1]][poz[0]] = 'Q'
mx.reverse()
print_matrix(mx, 8)
