#Условия
#Антон хочет приобрести велосипед с максимальной выгодой. 
#Выбрав интересную ему модель, продающуюся на разных маркетплейсах
#Он хочет научиться прогнозировать, как может измениться в будущем цена этой модели на разных торговых площадках, чтобы выбрать наиболее благоприятный момент для покупки.
#Наиболее благоприятным Антон считает момент, после которого с максимальной вероятностью цена уже не будет снижаться.
#Для этого он решил ежедневно отслеживать динамику цен на выбранных площадках.
#Через два месяца у него набралось достаточно данных, чтобы высчитать максимальную величину снижения цены (разницу между максимальной и минимальной ценой за период).
#Собрав накопленные данные в виде нескольких хронологически упорядоченных массивов цен, Антон решил автоматизировать свою работу и найти программное решение поставленной задачи:

#Дан массив из n элементов a_0, a_1, ... a_n-1.
#Инверсией в массиве называется любая пара индексов i, j такая, что i < j и при этом a_i > a_j.
#Назовем величиной инверсии i, j абсолютную разность соответствующих элементов |a_i - a_j|. Вам требуется найти максимальную по величине инверсию в данном массиве.

#Формат входных данных
#В первой строке входных данных содержится одно целое число n - размер массива (2 <= n <= 10^5).

#Во второй строке содержатся n целых чисел a_0, a_1, ... a_{n-1} разделенные пробелом - элементы массива (-10^9 <= a_i <= 10^9).
#Формат выходных данных
#Выведите одно число - максимальную величину инверсии в данном массиве. Если ни одной инверсии в массиве нет, то выведите 0.
#Примеры
#Входные данные:
#4
#3 5 2 1
# 
#Выходные данные:
#4

#Решение

n = int(input())
a = [int(i) for i in input().split()]
k = 0
for i in range(n):
    for j in range(i + 1, n):
        if a[i] > a[j] and a[i]-a[j] > k:
            k = a[i]-a[j]
print(k)

