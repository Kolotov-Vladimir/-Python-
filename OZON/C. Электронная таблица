#Вам необходимо написать часть функциональности обработки сортировок в электронных таблицах.

#Задана прямоугольная таблица n×m (n строк по m столбцов) из целых чисел.

#Если кликнуть по заголовку i-го столбца, то строки таблицы пересортируются таким образом, что в этом столбце значения будут идти по неубыванию (то есть возрастанию или равенству). При этом, если у двух строк одинаковое значение в этом столбце, то относительный порядок строк не изменится.

#Входные данные
#В первой строке записано целое число t (1≤t≤100) — количество наборов входных данных в файле. Далее следуют описания наборов, перед каждым из них записана пустая строка.
#В первой строке набора записаны два целых числа n и m (1≤n,m≤30) — количество строк и столбцов в таблице.
#Далее следуют n строк по m целых чисел в каждой — начальное состояние таблицы. Все элементы таблицы от 1 до 100.
#Затем входные данные содержат строку с один целым числом k (1≤k≤30) — количество кликов.
#Следующая строка содержит k целых чисел c1,c2,…,ck (1≤ci≤m) — номера столбцов, по которым были осуществлены клики. Клики даны в порядке их совершения.

#Выходные данные
#Для каждого набора входных данных выведите n строк по m чисел в каждой — итоговое состояние таблицы. После каждого набора выходных данных выводите дополнительный перевод строки.

#Пример
#входные данные
#3

#4 3
#3 4 1
#2 2 5
#2 4 2
#2 2 1
#3
#2 1 3

#3 1
#100
#9
#10
#2
#1 1

#3 3
#2 11 72
#99 11 13
#2 8 13
#5
#2 3 2 1 2
#выходные данные
#2 2 1
#3 4 1
#2 4 2
#2 2 5

#9
#10
#100

#2 8 13
#2 11 72
#99 11 13

#Решение
def input_matrix():
    for i in range(int(k[0])):
        temp = [int(num) for num in input().split()]
        matrix.append(temp)
    return matrix
def print_matrix(matrix, n, m, width=1):
    for r in range(n):
        for c in range(m):
            print(str(matrix[r][c]).ljust(width), end=' ')
        print()
n = int(input())
for i in range(n):
    pysto = input()
    k = [int(num) for num in input().split()]
    matrix = []
    matrix = input_matrix()
    kl = int(input())
    click = [int(num) for num in input().split()]
 
    for m in range(kl):
        for i in range(k[0]):
            for j in range(1, k[0]):
                if matrix[j][click[m]-1] < matrix[j-1][click[m]-1]:
                    matrix[j], matrix[j-1] = matrix[j-1], matrix[j]
    print_matrix(matrix, int(k[0]), int(k[1]))
 
